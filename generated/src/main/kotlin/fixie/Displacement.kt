// Generated by fixie at 29-01-2024 14:46
package fixie

@JvmInline
value class Displacement private constructor(private val value: FixDisplacement) : Comparable<Displacement> {

	fun toDouble(unit: DistanceUnit) = when(unit) {
		DistanceUnit.PICOMETER -> value.toDouble() * 1.0E12
		DistanceUnit.NANOMETER -> value.toDouble() * 1.0E9
		DistanceUnit.MICROMETER -> value.toDouble() * 1000000.0
		DistanceUnit.MILLIMETER -> value.toDouble() * 1000.0
		DistanceUnit.INCH -> value.toDouble() * 39.37007874015748
		DistanceUnit.FOOT -> value.toDouble() * 3.280839895013123
		DistanceUnit.YARD -> value.toDouble() * 1.0936132983377076
		DistanceUnit.METER -> value.toDouble()
		DistanceUnit.KILOMETER -> value.toDouble() * 0.001
		DistanceUnit.MILE -> value.toDouble() * 6.213711922373339E-4
	}

	override fun toString() = toString(DistanceUnit.METER)

	fun toString(unit: DistanceUnit) = toDouble(unit).toString() + unit.abbreviation

	override operator fun compareTo(other: Displacement) = this.value.compareTo(other.value)

	operator fun unaryMinus() = Displacement(-value)

	operator fun plus(right: Displacement) = Displacement(this.value + right.value)

	operator fun minus(right: Displacement) = Displacement(this.value - right.value)

	operator fun times(right: Int) = Displacement(this.value * right)

	operator fun div(right: Int) = Displacement(this.value / right)

	operator fun times(right: Long) = Displacement(this.value * right)

	operator fun div(right: Long) = Displacement(this.value / right)

	operator fun times(right: Float) = Displacement(this.value * right)

	operator fun div(right: Float) = Displacement(this.value / right)

	operator fun times(right: Double) = Displacement(this.value * right)

	operator fun div(right: Double) = Displacement(this.value / right)

	companion object {

		fun raw(value: Short) = Displacement(FixDisplacement.raw(value))

		val METER = Displacement(FixDisplacement.ONE)

		val MILLIMETER = METER / 1000
	}
}

operator fun Int.times(right: Displacement) = right * this

val Int.m
	get() = Displacement.METER * this

val Int.mm
	get() = Displacement.MILLIMETER * this

operator fun Long.times(right: Displacement) = right * this

val Long.m
	get() = Displacement.METER * this

val Long.mm
	get() = Displacement.MILLIMETER * this

operator fun Float.times(right: Displacement) = right * this

val Float.m
	get() = Displacement.METER * this

val Float.mm
	get() = Displacement.MILLIMETER * this

operator fun Double.times(right: Displacement) = right * this

val Double.m
	get() = Displacement.METER * this

val Double.mm
	get() = Displacement.MILLIMETER * this
